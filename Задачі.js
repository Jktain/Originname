// 1) Напишите функцию ucFirst(str), возвращающую строку str с заглавным первым символом.

// Ответ: 
// Мы не можем просто заменить первый символ, так как строки в JavaScript неизменяемы.

// Но можно пересоздать строку на основе существующей, с заглавным первым символом:

// let newStr = str[0].toUpperCase() + str.slice(1);
// Однако есть небольшая проблемка. Если строка пуста, str[0] вернёт undefined, 
//     а у undefined нет метода toUpperCase(), поэтому мы получим ошибку.

// Выхода два:

// Использовать str.charAt(0), поскольку этот метод всегда возвращает строку 
//     (для пустой строки — пустую).
// Добавить проверку на пустую строку.
// Вот второй вариант:

// function ucFirst(str) {
//   if (!str) return str;

//   return str[0].toUpperCase() + str.slice(1);
// }

// alert( ucFirst("вася") ); // Вася

//------------------------------------------- 2 -------------------------------------------
// Напишите функцию checkSpam(str), возвращающую true, если str содержит 'viagra'
//     или 'XXX', а иначе false.
// Функция должна быть нечувствительна к регистру

// Ответ: 
// Для поиска без учёта регистра символов переведём всю строку в нижний регистр, 
//     а потом проверим, есть ли в ней искомые подстроки:

// function checkSpam(str) {
//   let lowerStr = str.toLowerCase();

//   return lowerStr.includes('viagra') || lowerStr.includes('xxx');
// }

// alert( checkSpam('buy ViAgRA now') );
// alert( checkSpam('free xxxxx') );
// alert( checkSpam("innocent rabbit") );

//------------------------------------------- 3 -------------------------------------------
// Создайте функцию truncate(str, maxlength), которая проверяет длину строки str и, 
//     если она превосходит maxlength, заменяет конец str на "…", так, чтобы её длина
//     стала равна maxlength.

// Результатом функции должна быть та же строка, если усечение не требуется, либо, 
//     если необходимо, усечённая строка.

// Ответ:
// Строка, которую мы возвращаем, должна быть не длиннее maxlength, поэтому, если мы 
//     обрезаем строку, то мы должны убрать на один символ больше, чем maxlength — чтобы
//     хватило места на многоточие.

// Имейте в виду, что в качестве многоточия здесь используется … — ровно один специальный
//     Юникодный символ. Это не то же самое, что ... — три точки.

// function truncate(str, maxlength) {
//   return (str.length > maxlength) ?
//     str.slice(0, maxlength - 1) + '…' : str;
// }

//------------------------------------------- 4 -------------------------------------------
// Есть стоимость в виде строки "$120". То есть сначала идёт знак валюты, а затем – число.

// Создайте функцию extractCurrencyValue(str), которая будет из такой строки выделять 
//     числовое значение и возвращать его.

// Ответ:
// function extractCurrencyValue(str) {
//     return +str.slice(1);
//   }

//------------------------------------------- 5 -------------------------------------------


// Ответ: 


//------------------------------------------- 6 -------------------------------------------


// Ответ:

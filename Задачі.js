// 1) Напишите функцию sumTo(n), которая вычисляет сумму чисел 
//   1 + 2 + ... + n.
// Сделайте три варианта решения:

// С использованием цикла.
// Через рекурсию, т.к. sumTo(n) = n + sumTo(n-1) for n > 1.
// С использованием формулы арифметической прогрессии.

// Ответ:
// 1)
//   function sumTo(n) {
//     let sum = 0;

//     for (let i = 1; i <= n; i++) {
//       sum += i; 
//     }
    
//     return sum;
//   }

// 2) 
//   function sumTo(n) { 
//     let sum = 0;

//     if (n == 0) {
//       return sum;
//     } else {
//       return n + sumTo(n - 1);
//     }
//   } 

// 3) 
//   function sumTo(n) {
//     return n * (n + 1) / 2;
//   }

// alert( sumTo(100) ); // 5050

//------------------------------------------- 2 -------------------------------------------
// Задача – написать функцию factorial(n), которая возвращает n!,
//   используя рекурсию.

// Ответ: 
// function factorial(n) {
//   return n ? n * factorial(n - 1) : 1;
// }

// alert( factorial(5) ); // 120

//------------------------------------------- 3 -------------------------------------------
// Напишите функцию fib(n) которая возвращает n-е число Фибоначчи.

// Ответ:
// function fib(n) {
//   let a = 1;
//   let b = 1;
//   for (let i = 3; i <= n; i++) {
//     let c = a + b;
//     a = b;
//     b = c;
//   }
//   return b;
// }

// alert( fib(3) ); // 2
// alert( fib(7) ); // 13
// alert( fib(77) ); // 5527939700884757
// Цикл начинается с i=3, потому что первое и второе значения 
//   последовательности заданы a=1, b=1.

// Такой способ называется динамическое программирование снизу вверх.

//------------------------------------------- 4 -------------------------------------------
// Допустим, у нас есть односвязный список

// let list = {
//   value: 1,
//   next: {
//     value: 2,
//     next: {
//       value: 3,
//       next: {
//         value: 4,
//         next: null
//       }
//     }
//   }
// };
// Напишите функцию printList(list), которая выводит элементы списка
//   по одному.
// Сделайте два варианта решения: используя цикл и через рекурсию.

// Ответ:
// 1) Цикл
//   Обратите внимание, что мы используем временную переменную tmp для 
//     перемещения по списку. Технически, мы могли бы использовать 
//     параметр функции list вместо неё:

//   function printList(list) {

//     while(list) {
//       alert(list.value);
//       list = list.next;
//     }

//   }
//   …Но это было бы неблагоразумно. В будущем нам может понадобиться 
//     расширить функцию, сделать что-нибудь ещё со списком. Если мы 
//     меняем list, то теряем такую возможность.
//   Говоря о хороших именах для переменных, list здесь – это сам список,
//     его первый элемент. Так и должно быть, это просто и понятно.

//   С другой стороны, tmp используется исключительно для обхода списка,
//     как i в цикле for.

// 2) Рекурсия
//   function printList(list) {

//     alert(list.value); // выводим текущий элемент

//     if (list.next) {
//       printList(list.next); // делаем то же самое для остальной части списка
//     }

//   }

//   printList(list);

// Какой способ лучше?

// Технически, способ с циклом более эффективный. В обеих реализациях
//   делается то же самое, но для цикла не тратятся ресурсы для 
//   вложенных вызовов.

// С другой стороны, рекурсивный вариант более короткий и, возможно,
//   более простой для понимания.

//------------------------------------------- 5 -------------------------------------------
// Выведите односвязный список из предыдущего задания в обратном порядке

// Ответ: 
// 1) Рекурсия
//   function printReverseList(list) {

//     if (list.next) {
//       printReverseList(list.next);
//     }

//     alert(list.value);
//   }

// 2) Цикл
//   function printReverseList(list) {
//     let arr = [];
//     let tmp = list;

//     while (tmp) {
//       arr.push(tmp.value);
//       tmp = tmp.next;
//     }

//     for (let i = arr.length - 1; i >= 0; i--) {
//       alert( arr[i] );
//     }
//   }

//   printReverseList(list);

//------------------------------------------- 6 -------------------------------------------


// Ответ:


//------------------------------------------- 7 -------------------------------------------


// Ответ: 


//------------------------------------------- 8 -------------------------------------------


// Ответ:


//------------------------------------------- 9 -------------------------------------------


// Ответ: 


//------------------------------------------- 10 -------------------------------------------


// Ответ:


//------------------------------------------- 11 -------------------------------------------


// Ответ: 


//------------------------------------------- 12 -------------------------------------------


// Ответ:


//------------------------------------------- 13 -------------------------------------------


// Ответ:

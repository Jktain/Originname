//--------------------------------- || ---------------------------------
// Цепочка ИЛИ || возвращает первое истинное значение или последнее, если
    // такое значение не найдено.
// Например:

// alert( 1 || 0 ); // 1
// alert( true || 'no matter what' ); // true

// alert( null || 1 ); // 1 (первое истинное значение)
// alert( null || 0 || 1 ); // 1 (первое истинное значение)
// alert( undefined || null || 0 ); // 0 (поскольку все ложно, 
    //возвращается последнее значение)

//--------------------------------- && ---------------------------------
// И && возвращает первое ложное значение. Или последнее, 
    //если ничего не найдено.

// Если первый операнд истинный, И && возвращает второй:
// alert( 1 && 0 ); // 0
// alert( 1 && 5 ); // 5

// Если первый операнд ложный, И && возвращает его. Второй операнд 
    //игнорируется
// alert( null && 5 ); // null
// alert( 0 && "no matter what" ); // 0

//Приоритет оператора И && больше, чем ИЛИ ||, так что он выполняется 
    //раньше. Таким образом, код a && b || c && d по существу такой же, 
    //как если бы выражения && были в круглых скобках: 
    //(a && b) || (c && d).

//--------------------------------- ! ----------------------------------
// result = !value;
// Оператор принимает один аргумент и выполняет следующие действия:

// Сначала приводит аргумент к логическому типу true/false.
// Затем возвращает противоположное значение.
// Например:

// alert( !true ); // false
// alert( !0 ); // true
// В частности, двойное НЕ !! используют для преобразования значений к 
    //логическому типу:

// alert( !!"non-empty string" ); // true
// alert( !!null ); // false

//Приоритет НЕ ! является наивысшим из всех логических операторов, 
    //поэтому он всегда выполняется первым, перед && или ||.
//------------------------------ ?? -----------------------------------
//Оператор нулевого слияния представляет собой два вопросительных 
    //знака ??.
//Oператор ?? возвращает первый аргумент, если он не null/undefined,
    //иначе второй.
//Например, здесь мы отобразим user, если её значение не null/undefined,
    //в противном случае Аноним:

// let firstName = null;
// let lastName = null;
// let nickName = "Суперкодер";
    
// alert(firstName ?? lastName ?? nickName ?? "Аноним"); // Суперкодер
//Приоритет оператора ?? такой же, как и у ||. Они оба равны 4 в таблице
    //на MDN.
//По соображениям безопасности JavaScript запрещает использование 
    //оператора ?? вместе с && и ||, если приоритет явно не указан при 
    //помощи круглых скобок.Выполнение следующего кода приведёт к 
    //синтаксической ошибке:
    
// let x = 1 && 2 ?? 3; // Синтаксическая ошибка

//-----------------------  ------------------------
// 1) В JavaScript все объекты имеют скрытое свойство [[Prototype]], 
//     которое является либо другим объектом, либо null.
// 2) Мы можем использовать obj.__proto__ для доступа к нему (исторически 
//     обусловленный геттер/сеттер, есть другие способы, которые скоро
//     будут рассмотрены).
// 3) Объект, на который ссылается [[Prototype]], называется прототипом
// 4) Если мы хотим прочитать свойство obj или вызвать метод, которого
//     не существует у obj, тогда JavaScript попытается найти его
//     в прототипе.
// 5) Операции записи/удаления работают непосредственно с объектом, они
//     не используют прототип (если это обычное свойство, а не сеттер).
// 6) Если мы вызываем obj.method(), а метод при этом взят из прототипа,
//     то this всё равно ссылается на obj. Таким образом, методы всегда
//     работают с текущим объектом, даже если они наследуются.
// 6) Цикл for..in перебирает как свои, так и унаследованные свойства.
//     Остальные методы получения ключей/значений работают только 
//     с собственными свойствами объекта.

//-------------------  --------------------


//-----------------  -----------------


//------------------------  --------------------------


//--------------------------  -----------------------------


//--------------------------  --------------------------

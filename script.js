//-----------------------  ------------------------
// 1) Методы setInterval(func, delay, ...args) и 
//     setTimeout(func, delay, ...args) позволяют выполнять func 
//     регулярно или только один раз после задержки delay, заданной в мс
// 2) Для отмены выполнения необходимо вызвать clearInterval/clearTimeout
//     со значением, которое возвращают методы setInterval/setTimeout.
// 3) Вложенный вызов setTimeout является более гибкой альтернативой
//     setInterval. Также он позволяет более точно задать интервал 
//     между выполнениями.
// 4) Планирование с нулевой задержкой setTimeout(func,0) или, что 
//     то же самое, setTimeout(func) используется для вызовов, которые
//     должны быть исполнены как можно скорее, после завершения 
//     исполнения текущего кода.
// Браузер ограничивает 4-мя мс минимальную задержку между пятью и более
//     вложенными вызовами setTimeout, а также для setInterval, 
//     начиная с 5-го вызова.
// Обратим внимание, что все методы планирования не гарантируют 
//     точную задержку.

// Например, таймер в браузере может замедляться по многим причинам:

// 1) Перегружен процессор.
// 2) Вкладка браузера в фоновом режиме.
// 3) Работа ноутбука от аккумулятора.
// Всё это может увеличивать минимальный интервал срабатывания таймера
//     (и минимальную задержку) до 300 или даже 1000 мс в зависимости
//     oт браузера и настроек производительности ОС.

//-------------------  --------------------


//-----------------  -----------------


//------------------------  --------------------------


//--------------------------  -----------------------------


//--------------------------  --------------------------
